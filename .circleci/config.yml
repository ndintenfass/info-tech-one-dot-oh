version: 2.1

orbs:
  ecs-orb:
    executors:
      dev:
        docker:
          - image: gerey/saasdemo-docker-image:latest
        working_directory: ~/info-tech-one-dot-oh
    
    commands:
      deploy-to-prod:
        steps:
          - run: script/deploy.sh prod
      get-code-and-setup-docker:
        steps:
          - checkout
          - setup_remote_docker:
              reusable: true

jobs:
  build:
    executor: ecs-orb/dev
    environment:
      IMAGE_TAG: ${CIRCLE_SHA1}

    steps:

      - ecs-orb/get-code-and-setup-docker
      
      - run: docker build -t $DOCKER_USER/info-tech-one-dot-oh-uwsgi:${CIRCLE_SHA1} uwsgi
      - run: docker build -t $DOCKER_USER/info-tech-one-dot-oh-nginx:${CIRCLE_SHA1} nginx
      

      #push docker iamge to docker hub
      - run: docker login -u $DOCKER_USER -p $DOCKER_PASS
      - run: docker push $DOCKER_USER/info-tech-one-dot-oh-uwsgi:${CIRCLE_SHA1}
      - run: docker push $DOCKER_USER/info-tech-one-dot-oh-nginx:${CIRCLE_SHA1}

  test:
    executor: ecs-orb/dev

    steps:
      - ecs-orb/get-code-and-setup-docker
      - run: docker pull $DOCKER_USER/info-tech-one-dot-oh-uwsgi:${CIRCLE_SHA1}
      - run: docker pull $DOCKER_USER/info-tech-one-dot-oh-nginx:${CIRCLE_SHA1}
      - run: docker build -t info-tech-one-dot-oh-test test
      - run: xxd -l 8 -p /dev/urandom > test_container_name
      - run: docker-compose -p ${CIRCLE_BUILD_NUM} up -d
      - run: docker run --link ${CIRCLE_BUILD_NUM}_nginx_1:nginx --name $(cat test_container_name) info-tech-one-dot-oh-test
     
      - run:
          when: always
          command: |
            mkdir test-reports
            docker cp $(cat test_container_name):/nosetests.xml test-reports/.
            docker-compose kill || true
      
      - store_artifacts:
            path: test-reports

      - store_test_results:
          path: test-reports/

  deploy:
    executor: ecs-orb/dev
    
    steps:
      - checkout
      - ecs-orb/deploy-to-prod

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build
      - test:
          requires:
            - build
      - hold:
          type: approval
          requires:
            - test
      - deploy:
          context: org-global
          requires:
            - hold
          filters:
            branches:
              only:
                - master
